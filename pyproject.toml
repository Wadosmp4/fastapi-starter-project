[project]
name = "fastapi-starter-project"
version = "0.1.0"
description = "FastAPI starter project"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aioredis==2.0.1",
    "alembic==1.14.1",
    "annotated-types==0.7.0",
    "anyio==4.8.0",
    "async-timeout==5.0.1",
    "bcrypt==4.2.1",
    "dnspython==2.7.0",  # For email validation
    "email-validator==2.2.0",
    "fastapi==0.115.8",
    "h11==0.14.0",  # Required by uvicorn
    "idna==3.10",
    "mako==1.3.9",  # Required by alembic
    "markupsafe==3.0.0",  # Required by mako
    "psycopg2-binary==2.9.10",
    "pydantic==2.10.6",
    "pydantic-core==2.27.2",
    "pydantic-settings==2.7.1",
    "python-dotenv==1.0.1",
    "sniffio==1.3.1",  # Required by anyio
    "sqlalchemy==2.0.38",
    "starlette==0.45.3",  # Required by fastapi
    "typing-extensions==4.12.2",
    "uvicorn==0.34.0",
]

[project.optional-dependencies]
dev = [
    "black==25.1.0",
    "mypy==1.15.0",
    "mypy-extensions==1.0.0",
    "pre-commit==4.2.0",
    "ruff==0.11.2",
]

[tool.ruff]
# Same as Black.
line-length = 120

# Enable all rules by default, then configure specific rules below
select = ["ALL"]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D106",  # Missing docstring in public nested class
    "INP001",  # File is part of an implicit namespace package
    "S101",  # Use of assert detected
    "PLR2004",  # Magic value used in comparison
    "ANN201",  # Missing return type annotation for public function
    "B008",  # Function call as default argument in function definition
    "D400",  # First line should end with a period
    "D415",  # First line should end with a period, question mark, or exclamation point
    "RET504",  # Unnecessary variable assignment before return statement
    "PLR0913",  # Too many arguments to function call
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "alembic",
]

target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["app"]

[tool.ruff.mccabe]
max-complexity = 18

[tool.mypy]
python_version = "3.12"
warn_return_any = false
disallow_untyped_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false